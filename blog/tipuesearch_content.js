var tipuesearch = {"pages":[{"title":"About","text":"2018 Fall 分組網誌 課程倉儲: https://github.com/mdecourse/2018fall 課程投影片: https://mdecourse.github.io/2018fall/reveal 課程網誌: https://mdecourse.github.io/2018fall/blog","tags":"misc","url":"https://mdecadp2018.github.io/site-40623138/blog/pages/about/"},{"title":"Week8","text":"在製作blog時發現近端推不上去，只要一推送，會將我的資料夾裡的blog全部刪掉，但是換電腦又可以。 圖片支援請按此","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623138/blog/blog-8.html"},{"title":"Week7","text":"更改網路設定: 控制台--->網路和網際網路---->乙太網路2 -->變更介面卡選項--->內容--->網際網路通訊協定第4版(IPv4) 在使用DNS伺服器位置輸入: 140.130.17.3 140.130.1.2 網際網路通訊協定第6版(IPv6): 2001:288:6004:17::3 系上 2001:288:6004:1::2 學校 2001:b000:168::1 hinet","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623138/blog/blog-7.html"},{"title":"Week6","text":"這幾週以來主要的筆記內容 筆記1圖片支援請按此 筆記2圖片支援請按此","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623138/blog/blog-6.html"},{"title":"Week5","text":"畫未來將要組裝的零件圖，準備利用Onshape將零件組裝成一座小機構。 零件圖片支援請按此","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623138/blog/blog-5.html"},{"title":"Week4","text":"先從最基本的圖開始熟悉Onshape的功能，在這練習中間曾經有不小心將網頁關掉過，但因為他的自動儲存救了回來，驗證了這套軟體的強大好處。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623138/blog/blog-4.html"},{"title":"Week3","text":"開始學習Onshape繪圖工具，跟過去學的SolidWorks&Inventor畫圖法類似，但是Onshape只要有網路即可在網頁上繪圖，這是與另外兩套軟體最不同的地方，且Onshape隨時儲存所有畫過的草圖，不怕資料不見，再來是這套軟體為全英文，剛好可以在畫圖時也學習英文。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623138/blog/blog-3.html"},{"title":"Week2","text":"跟一年級下學期一樣，利用github來製作網誌、部落格及投影片，將每一週的上課內容記錄下來，然後準備使用Onshape繪圖網頁來繪圖。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623138/blog/blog-2.html"},{"title":"Week1","text":"2018 Fall 開始將網際內容管理、投影片與網誌進行整合. 課程倉儲 利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處: 第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 cp github 倉儲 外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料. 第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 cp 課程網站 伺服. 第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料. 該學習哪種程式語言? C/C++、Python、Lua 或 Javascript? 都可以. 在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623138/blog/blog-1.html"}]};